@using AccountLibrary.Models;
@model IEnumerable<AccountLibrary.Models.AccountModel>
@{
	ViewData["Title"] = "Список ЛС";
}

@{
	await Html.RenderPartialAsync("_NewAccountModal", new AccountLibrary.Models.AccountModel());
}

<div class="text-center">
	@{
		AddressModel address = new AddressModel()
			{
				Street = string.IsNullOrEmpty(Context.Request.Query["Address.Street"]) ? "" : Context.Request.Query["Address.Street"],
				House = string.IsNullOrEmpty(Context.Request.Query["Address.House"]) ? "" : Context.Request.Query["Address.House"],
				Apartment = string.IsNullOrEmpty(Context.Request.Query["Address.Apartment"]) ? "" : Context.Request.Query["Address.Apartment"]
			};

		FilterModel filter = new FilterModel()
			{
				IsNotEmptyMembers = string.IsNullOrEmpty(Context.Request.Query["isNotEmptyMembers"]) ? false : true,
				CertainDate = string.IsNullOrEmpty(Context.Request.Query["certainDate"]) ? null : DateTime.Parse(Context.Request.Query["certainDate"]),
				Address = address,
				AccountNumber = string.IsNullOrEmpty(Context.Request.Query["accountNumber"]) ? "" : Context.Request.Query["accountNumber"],
				Surename = string.IsNullOrEmpty(Context.Request.Query["surename"]) ? "" : Context.Request.Query["surename"],
				Name = string.IsNullOrEmpty(Context.Request.Query["name"]) ? "" : Context.Request.Query["name"],
				Patronymic = string.IsNullOrEmpty(Context.Request.Query["patronymic"]) ? "" : Context.Request.Query["patronymic"],
				RoomArea = string.IsNullOrEmpty(Context.Request.Query["roomArea"]) ? null : float.Parse(Context.Request.Query["roomArea"]),
			};

		await Html.RenderPartialAsync("_SearchBar", filter);
	}
	@{
		await Html.RenderPartialAsync("_AccountsTable", Model);
	}
</div>

<script>
	let canCreateAccount = true

	$(document).ready(function () {
		$('#AccountForm').submit(function (event) {
			event.preventDefault();
			if (!canCreateAccount) return

			canCreateAccount = false

			var accountNumber = $('input[name="AccountNumber"]').val();
			var startDate = $('input[name="StartDate"]').val();
			var endDate = $('input[name="EndDate"]').val();
			var street = $('input[name="Address.Street"]').val();
			var house = $('input[name="Address.House"]').val();
			var apartment = $('input[name="Address.Apartment"]').val();
			var roomArea = $('input[name="RoomArea"]').val();

			var formData = {
				AccountNumber: accountNumber,
				startDate: startDate,
				EndDate: endDate,
				Address: {
					Street: street,
					House: house,
					Apartment: apartment
				},
				RoomArea: roomArea
			};

			$.ajax({
				url: 'CreateAccount',
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(formData),
				success: function (data) {
					$('#toastBody').text("Успешно!")
					$(".toast").toast('show')

					setTimeout(() => { location.reload() }, 1500);
				},
				error: function (error) {
					var errors = JSON.parse(error.responseText).errors;
					var errorSummary = "";
					console.log(errors)
					console.log(error)
					for (var key in errors) {
						if (Array.isArray(errors[key])) {
							errorSummary += errors[key].join(", ") + "\n";
						} else {
							errorSummary += errors[key] + "\n";
						}
					}

					$('#toastBody').text(errorSummary)

					$(".toast").toast('show')

					canCreateAccount = true
				}
			});
		})
	})
</script>